{"version":3,"sources":["../file:/C:/Users/mivebe/Documents/%7BProgramming%7D/VSCode/2D-stuff/cocos-flappy/assets/scripts/file:/C:/Users/mivebe/Documents/%7BProgramming%7D/VSCode/2D-stuff/cocos-flappy/assets/scripts/Character.ts","../file:/C:/Users/mivebe/Documents/%7BProgramming%7D/VSCode/2D-stuff/cocos-flappy/assets/scripts/file:/C:/Users/mivebe/Documents/%7BProgramming%7D/VSCode/2D-stuff/cocos-flappy/assets/scripts/CharacterAudio.ts","../file:/C:/ProgramData/cocos/editors/Creator/3.8.3/resources/resources/3d/engine/editor/assets/tools/file:/C:/ProgramData/cocos/editors/Creator/3.8.3/resources/resources/3d/engine/editor/assets/tools/debug-view-runtime-control.ts","../file:/C:/Users/mivebe/Documents/%7BProgramming%7D/VSCode/2D-stuff/cocos-flappy/assets/scripts/file:/C:/Users/mivebe/Documents/%7BProgramming%7D/VSCode/2D-stuff/cocos-flappy/assets/scripts/GameController.ts","../file:/C:/Users/mivebe/Documents/%7BProgramming%7D/VSCode/2D-stuff/cocos-flappy/assets/scripts/file:/C:/Users/mivebe/Documents/%7BProgramming%7D/VSCode/2D-stuff/cocos-flappy/assets/scripts/Ground.ts","../file:/C:/Users/mivebe/Documents/%7BProgramming%7D/VSCode/2D-stuff/cocos-flappy/assets/scripts/file:/C:/Users/mivebe/Documents/%7BProgramming%7D/VSCode/2D-stuff/cocos-flappy/assets/scripts/PipePool.ts","../file:/C:/Users/mivebe/Documents/%7BProgramming%7D/VSCode/2D-stuff/cocos-flappy/assets/scripts/file:/C:/Users/mivebe/Documents/%7BProgramming%7D/VSCode/2D-stuff/cocos-flappy/assets/scripts/Pipes.ts","../file:/C:/Users/mivebe/Documents/%7BProgramming%7D/VSCode/2D-stuff/cocos-flappy/assets/scripts/file:/C:/Users/mivebe/Documents/%7BProgramming%7D/VSCode/2D-stuff/cocos-flappy/assets/scripts/Results.ts"],"names":["ccclass","_decorator","property","_dec","_dec2","type","CCFloat","_dec3","_descriptor","_applyDecoratedDescriptor","_class2","_Component","Character","_this","_len","arguments","length","args","Array","_key","call","apply","concat","_initializerDefineProperty","_assertThisInitialized","_descriptor2","birdAnimation","birdLocation","hitSomething","_inheritsLoose","_proto","prototype","onLoad","this","resetBird","getComponent","Animation","Vec3","node","setPosition","fly","_this2","stop","tween","position","to","jumpDuration","x","y","jumpHeight","easing","onUpdate","target","start","play","Component","configurable","enumerable","writable","initializer","_class","_RF","pop","DEFAULT_VOLUMES","AudioClip","AudioSource","CharacterAudio","onAudioQueue","index","clip","clips","volume","audioSource","playOneShot","Node","_dec4","DebugViewRuntimeControl","_descriptor3","_single","strSingle","strComposite","strMisc","compositeModeToggleList","singleModeToggleList","miscModeToggleList","textComponentList","labelComponentList","textContentList","hideButtonLabel","_currentColorIndex","strColor","color","Color","WHITE","BLACK","RED","GREEN","BLUE","parent","Canvas","uiTransform","UITransform","halfScreenWidth","width","halfScreenHeight","height","miscNode","getChildByName","buttonNode","instantiate","name","titleNode","i","newLabel","EnableAllCompositeModeButton","setScale","labelComponent","Label","string","overflow","currentRow","newNode","singleModeToggle","textComponent","getComponentInChildren","RichText","on","Toggle","EventType","TOGGLE","toggleSingleMode","Button","CLICK","enableAllCompositeMode","changeColorButton","changeTextColor","HideButton","hideUI","compositeModeToggle","isChecked","toggleLightingWithAlbedo","toggleCSMColoration","toggleCompositeMode","console","error","isTextMatched","textUI","textDescription","tempText","String","findIndex","search","substr","toggle","debugView","director","root","singleMode","enableCompositeMode","lightingWithAlbedo","csmLayerColoration","button","toggleComponent","activeValue","active","update","deltaTime","Ground","tooltip","Results","_dec5","_dec6","PipePool","_dec7","CCInteger","_dec8","GameController","_descriptor4","_descriptor5","_descriptor6","_descriptor7","isOver","initListener","result","resetScore","pause","TOUCH_START","resetGame","character","startGame","characterAudio","hideResults","resume","gameOver","showResults","pipePool","reset","passPipe","addScore","createPipe","addPool","contactBottomPipe","collider","Collider2D","Contact2DType","BEGIN_CONTACT","onBeginContact","selfCollider","otherCollider","contact","birdStruck","dt","groundWidth1","groundWidth2","groundWidth3","tempStartLocation1","tempStartLocation2","tempStartLocation3","gameSpeed","speed","init","ground1","ground2","ground3","canvas","getScene","Prefab","pool","NodePool","createdPipe","initPool","prefabPipes","pipePoolHome","addChild","put","size","get","removeAllChildren","clear","random","min","max","Math","Pipes","tempStartLocationUp","tempStartLocationDown","scene","screen","windowSize","game","pipeSpeed","tempSpeed","isPass","find","initPos","topPipe","gap","topHeight","bottomPipe","log","destroy","maxScore","currentScore","updateScore","num","scoreLabel","highScore","resultEnd"],"mappings":"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","file":"all.js","sourcesContent":["import { _decorator, Animation, CCFloat, Component, tween, Vec3 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Character')\r\nexport class Character extends Component {\r\n  @property({ type: CCFloat })\r\n  public jumpHeight: number;\r\n\r\n  @property({ type: CCFloat })\r\n  public jumpDuration: number;\r\n\r\n  public birdAnimation: Animation;\r\n  public birdLocation: Vec3;\r\n  public hitSomething: boolean;\r\n\r\n  onLoad() {\r\n    this.resetBird();\r\n\r\n    this.birdAnimation = this.getComponent(Animation);\r\n  }\r\n\r\n  resetBird() {\r\n    this.birdLocation = new Vec3(0, 0, 0);\r\n    this.node.setPosition(this.birdLocation);\r\n    this.hitSomething = false;\r\n  }\r\n\r\n  fly() {\r\n    this.birdAnimation.stop();\r\n\r\n    tween(this.node.position)\r\n      .to(this.jumpDuration, new Vec3(this.node.position.x, this.node.position.y + this.jumpHeight), {\r\n        easing: 'smooth',\r\n        onUpdate: (target: Vec3) => {\r\n          this.node.position = target;\r\n        },\r\n      })\r\n      .start();\r\n\r\n    this.birdAnimation.play();\r\n  }\r\n}\r\n","import { _decorator, AudioClip, AudioSource, Component } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\nconst DEFAULT_VOLUMES = [0.1, 0.3, 0.3, 0.3];\r\n\r\n@ccclass('CharacterAudio')\r\nexport class CharacterAudio extends Component {\r\n  @property({ type: [AudioClip] })\r\n  public clips: AudioClip[] = [];\r\n\r\n  @property({ type: AudioSource })\r\n  public audioSource: AudioSource = null;\r\n\r\n  onAudioQueue(index: number) {\r\n    const clip: AudioClip = this.clips[index];\r\n    const volume = DEFAULT_VOLUMES[index];\r\n    \r\n    this.audioSource.playOneShot(clip, volume);\r\n  }\r\n}\r\n","import { Color, Canvas, UITransform, instantiate, math, Toggle, TextureCube, _decorator, Component, Button, labelAssembler, game, director, Node, Scene, renderer, CameraComponent, Label, ForwardPipeline, RichText } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('internal.DebugViewRuntimeControl')\r\nexport class DebugViewRuntimeControl extends Component {\r\n    @property(Node)\r\n    compositeModeToggle: Node | null = null;\r\n    @property(Node)\r\n    singleModeToggle: Node | null = null;\r\n    @property(Node)\r\n    EnableAllCompositeModeButton: Node | null = null;\r\n\t_single: number = 0;\r\n\r\n    private strSingle: string[] = [\r\n        'No Single Debug',\r\n        'Vertex Color',\r\n        'Vertex Normal',\r\n        'Vertex Tangent',\r\n        'World Position',\r\n        'Vertex Mirror',\r\n        'Face Side',\r\n        'UV0',\r\n        'UV1',\r\n        'UV Lightmap',\r\n        'Project Depth',\r\n        'Linear Depth',\r\n\r\n        'Fragment Normal',\r\n        'Fragment Tangent',\r\n        'Fragment Binormal',\r\n        'Base Color',\r\n        'Diffuse Color',\r\n        'Specular Color',\r\n        'Transparency',\r\n        'Metallic',\r\n        'Roughness',\r\n        'Specular Intensity',\r\n        'IOR',\r\n\r\n        'Direct Diffuse',\r\n        'Direct Specular',\r\n        'Direct All',\r\n        'Env Diffuse',\r\n        'Env Specular',\r\n        'Env All',\r\n        'Emissive',\r\n        'Light Map',\r\n        'Shadow',\r\n        'AO',\r\n\r\n        'Fresnel',\r\n        'Direct Transmit Diffuse',\r\n        'Direct Transmit Specular',\r\n        'Env Transmit Diffuse',\r\n        'Env Transmit Specular',\r\n        'Transmit All',\r\n        'Direct Internal Specular',\r\n        'Env Internal Specular',\r\n        'Internal All',\r\n\r\n        'Fog',\r\n    ];\r\n    private strComposite: string[] = [\r\n        'Direct Diffuse',\r\n        'Direct Specular',\r\n        'Env Diffuse',\r\n        'Env Specular',\r\n        'Emissive',\r\n        'Light Map',\r\n        'Shadow',\r\n        'AO',\r\n\r\n        'Normal Map',\r\n        'Fog',\r\n\r\n        'Tone Mapping',\r\n        'Gamma Correction',\r\n\r\n        'Fresnel',\r\n        'Transmit Diffuse',\r\n        'Transmit Specular',\r\n        'Internal Specular',\r\n        'TT',\r\n    ];\r\n    private strMisc: string[] = [\r\n        'CSM Layer Coloration',\r\n        'Lighting With Albedo',\r\n    ];\r\n\r\n    private compositeModeToggleList: Node[] = [];\r\n    private singleModeToggleList: Node[] = [];\r\n    private miscModeToggleList: Node[] = [];\r\n    private textComponentList: RichText[] = [];\r\n    private labelComponentList: Label[] = [];\r\n    private textContentList: string[] = [];\r\n    private hideButtonLabel: Label;\r\n    start() {\r\n        // get canvas resolution\r\n        const canvas = this.node.parent.getComponent(Canvas);\r\n        if (!canvas) {\r\n            console.error('debug-view-runtime-control should be child of Canvas');\r\n            return;\r\n        }\r\n\r\n        const uiTransform = this.node.parent.getComponent(UITransform);\r\n        const halfScreenWidth = uiTransform.width * 0.5;\r\n        const halfScreenHeight = uiTransform.height * 0.5;\r\n\r\n        let x = -halfScreenWidth + halfScreenWidth * 0.1, y = halfScreenHeight - halfScreenHeight * 0.1;\r\n        const width = 200, height = 20;\r\n\r\n        // new nodes\r\n        const miscNode = this.node.getChildByName('MiscMode');\r\n        const buttonNode = instantiate(miscNode);\r\n        buttonNode.parent = this.node;\r\n        buttonNode.name = 'Buttons';\r\n        const titleNode = instantiate(miscNode);\r\n        titleNode.parent = this.node;\r\n        titleNode.name = 'Titles';\r\n\r\n        // title\r\n        for (let i = 0; i < 2; i++) {\r\n            const newLabel = instantiate(this.EnableAllCompositeModeButton.getChildByName('Label'));\r\n            newLabel.setPosition(x + (i > 0 ? 50 + width * 2 : 150), y, 0.0);\r\n            newLabel.setScale(0.75, 0.75, 0.75);\r\n            newLabel.parent = titleNode;\r\n            const labelComponent = newLabel.getComponent(Label);\r\n            labelComponent.string = i ? '----------Composite Mode----------' : '----------Single Mode----------';\r\n            labelComponent.color = Color.WHITE;\r\n            labelComponent.overflow = 0;\r\n            this.labelComponentList[this.labelComponentList.length] = labelComponent;\r\n        }\r\n\r\n        y -= height;\r\n        // single\r\n        let currentRow = 0;\r\n        for (let i = 0; i < this.strSingle.length; i++, currentRow++) {\r\n            if (i === this.strSingle.length >> 1) {\r\n                x += width;\r\n                currentRow = 0;\r\n            }\r\n            const newNode = i ? instantiate(this.singleModeToggle) : this.singleModeToggle;\r\n            newNode.setPosition(x, y - height * currentRow, 0.0);\r\n            newNode.setScale(0.5, 0.5, 0.5);\r\n            newNode.parent = this.singleModeToggle.parent;\r\n\r\n            const textComponent = newNode.getComponentInChildren(RichText);\r\n            textComponent.string = this.strSingle[i];\r\n            this.textComponentList[this.textComponentList.length] = textComponent;\r\n            this.textContentList[this.textContentList.length] = textComponent.string;\r\n\r\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleSingleMode, this);\r\n\r\n            this.singleModeToggleList[i] = newNode;\r\n        }\r\n\r\n        x += width;\r\n        // buttons\r\n        this.EnableAllCompositeModeButton.setPosition(x + 15, y, 0.0);\r\n        this.EnableAllCompositeModeButton.setScale(0.5, 0.5, 0.5);\r\n        this.EnableAllCompositeModeButton.on(Button.EventType.CLICK, this.enableAllCompositeMode, this);\r\n        this.EnableAllCompositeModeButton.parent = buttonNode;\r\n        let labelComponent = this.EnableAllCompositeModeButton.getComponentInChildren(Label);\r\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\r\n\r\n        const changeColorButton = instantiate(this.EnableAllCompositeModeButton);\r\n        changeColorButton.setPosition(x + 90, y, 0.0);\r\n        changeColorButton.setScale(0.5, 0.5, 0.5);\r\n        changeColorButton.on(Button.EventType.CLICK, this.changeTextColor, this);\r\n        changeColorButton.parent = buttonNode;\r\n        labelComponent = changeColorButton.getComponentInChildren(Label);\r\n        labelComponent.string = 'TextColor';\r\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\r\n\r\n        const HideButton = instantiate(this.EnableAllCompositeModeButton);\r\n        HideButton.setPosition(x + 200, y, 0.0);\r\n        HideButton.setScale(0.5, 0.5, 0.5);\r\n        HideButton.on(Button.EventType.CLICK, this.hideUI, this);\r\n        HideButton.parent = this.node.parent;\r\n        labelComponent = HideButton.getComponentInChildren(Label);\r\n        labelComponent.string = 'Hide UI';\r\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\r\n        this.hideButtonLabel = labelComponent;\r\n\r\n        // misc\r\n        y -= 40;\r\n        for (let i = 0; i < this.strMisc.length; i++) {\r\n            const newNode = instantiate(this.compositeModeToggle);\r\n            newNode.setPosition(x, y - height * i, 0.0);\r\n            newNode.setScale(0.5, 0.5, 0.5);\r\n            newNode.parent = miscNode;\r\n\r\n            const textComponent = newNode.getComponentInChildren(RichText);\r\n            textComponent.string = this.strMisc[i];\r\n            this.textComponentList[this.textComponentList.length] = textComponent;\r\n            this.textContentList[this.textContentList.length] = textComponent.string;\r\n\r\n            const toggleComponent = newNode.getComponent(Toggle);\r\n            toggleComponent.isChecked = i ? true : false;\r\n            newNode.on(Toggle.EventType.TOGGLE, i ? this.toggleLightingWithAlbedo : this.toggleCSMColoration, this);\r\n            this.miscModeToggleList[i] = newNode;\r\n        }\r\n\r\n        // composite\r\n        y -= 150;\r\n        for (let i = 0; i < this.strComposite.length; i++) {\r\n            const newNode = i ? instantiate(this.compositeModeToggle) : this.compositeModeToggle;\r\n            newNode.setPosition(x, y - height * i, 0.0);\r\n            newNode.setScale(0.5, 0.5, 0.5);\r\n            newNode.parent = this.compositeModeToggle.parent;\r\n\r\n            const textComponent = newNode.getComponentInChildren(RichText);\r\n            textComponent.string = this.strComposite[i];\r\n            this.textComponentList[this.textComponentList.length] = textComponent;\r\n            this.textContentList[this.textContentList.length] = textComponent.string;\r\n\r\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleCompositeMode, this);\r\n\r\n            this.compositeModeToggleList[i] = newNode;\r\n        }\r\n    }\r\n\r\n    isTextMatched(textUI, textDescription) : boolean {\r\n        let tempText = new String(textUI);\r\n        const findIndex = tempText.search('>');\r\n        if (findIndex === -1) {\r\n            return textUI === textDescription;\r\n        } else {\r\n            tempText = tempText.substr(findIndex + 1);\r\n            tempText = tempText.substr(0, tempText.search('<'));\r\n            return tempText === textDescription;\r\n        }\r\n    }\r\n    toggleSingleMode(toggle: Toggle) {\r\n        const debugView = director.root!.debugView;\r\n        const textComponent = toggle.getComponentInChildren(RichText);\r\n        for (let i = 0; i < this.strSingle.length; i++) {\r\n            if (this.isTextMatched(textComponent.string, this.strSingle[i])) {\r\n                debugView.singleMode = i;\r\n            }\r\n        }\r\n    }\r\n    toggleCompositeMode(toggle: Toggle) {\r\n        const debugView = director.root!.debugView;\r\n        const textComponent = toggle.getComponentInChildren(RichText);\r\n        for (let i = 0; i < this.strComposite.length; i++) {\r\n            if (this.isTextMatched(textComponent.string, this.strComposite[i])) {\r\n                debugView.enableCompositeMode(i, toggle.isChecked);\r\n            }\r\n        }\r\n    }\r\n    toggleLightingWithAlbedo(toggle: Toggle) {\r\n        const debugView = director.root!.debugView;\r\n        debugView.lightingWithAlbedo = toggle.isChecked;\r\n    }\r\n    toggleCSMColoration(toggle: Toggle) {\r\n        const debugView = director.root!.debugView;\r\n        debugView.csmLayerColoration = toggle.isChecked;\r\n    }\r\n    enableAllCompositeMode(button: Button) {\r\n        const debugView = director.root!.debugView;\r\n        debugView.enableAllCompositeMode(true);\r\n        for (let i = 0; i < this.compositeModeToggleList.length; i++) {\r\n            const toggleComponent = this.compositeModeToggleList[i].getComponent(Toggle);\r\n            toggleComponent.isChecked = true;\r\n        }\r\n\r\n        let toggleComponent = this.miscModeToggleList[0].getComponent(Toggle);\r\n        toggleComponent.isChecked = false;\r\n        debugView.csmLayerColoration = false;\r\n        toggleComponent = this.miscModeToggleList[1].getComponent(Toggle);\r\n        toggleComponent.isChecked = true;\r\n        debugView.lightingWithAlbedo = true;\r\n    }\r\n    hideUI(button: Button) {\r\n        const titleNode = this.node.getChildByName('Titles');\r\n        const activeValue = !titleNode.active;\r\n        this.singleModeToggleList[0].parent.active = activeValue;\r\n        this.miscModeToggleList[0].parent.active = activeValue;\r\n        this.compositeModeToggleList[0].parent.active = activeValue;\r\n        this.EnableAllCompositeModeButton.parent.active = activeValue;\r\n        titleNode.active = activeValue;\r\n        this.hideButtonLabel.string = activeValue ? 'Hide UI' : 'Show UI';\r\n    }\r\n\r\n    private _currentColorIndex = 0;\r\n    private strColor: string[] = [\r\n        '<color=#ffffff>',\r\n        '<color=#000000>',\r\n        '<color=#ff0000>',\r\n        '<color=#00ff00>',\r\n        '<color=#0000ff>',\r\n    ];\r\n    private color: Color[] = [\r\n        Color.WHITE,\r\n        Color.BLACK,\r\n        Color.RED,\r\n        Color.GREEN,\r\n        Color.BLUE,\r\n    ];\r\n    changeTextColor(button: Button) {\r\n        this._currentColorIndex++;\r\n        if (this._currentColorIndex >= this.strColor.length) {\r\n            this._currentColorIndex = 0;\r\n        }\r\n        for (let i = 0; i < this.textComponentList.length; i++) {\r\n            this.textComponentList[i].string = this.strColor[this._currentColorIndex] + this.textContentList[i] + '</color>';\r\n        }\r\n        for (let i = 0; i < this.labelComponentList.length; i++) {\r\n            this.labelComponentList[i].color = this.color[this._currentColorIndex];\r\n        }\r\n    }\r\n\r\n    onLoad() {\r\n    }\r\n    update(deltaTime: number) {\r\n    }\r\n}\r\n","import {\r\n  _decorator,\r\n  CCInteger,\r\n  Collider2D,\r\n  Component,\r\n  Contact2DType,\r\n  director,\r\n  EventKeyboard,\r\n  Input,\r\n  input,\r\n  KeyCode,\r\n  Node,\r\n  IPhysics2DContact,\r\n} from 'cc';\r\nimport { Ground } from './Ground';\r\nimport { Results } from './Results';\r\nimport { Character } from './Character';\r\nimport { PipePool } from './PipePool';\r\nimport { CharacterAudio } from './CharacterAudio';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GameController')\r\nexport class GameController extends Component {\r\n  @property({ type: Ground, tooltip: 'This is a ground' })\r\n  public ground: Ground;\r\n\r\n  @property({ type: Results, tooltip: 'Results here' })\r\n  public result: Results;\r\n\r\n  @property({ type: Character, tooltip: 'Character here' })\r\n  public character: Character;\r\n\r\n  @property({ type: CharacterAudio, tooltip: 'CharacterAudio here' })\r\n  public characterAudio: CharacterAudio;\r\n\r\n  @property({ type: PipePool, tooltip: 'Pipes Pool here' })\r\n  public pipePool: PipePool;\r\n\r\n  @property({ type: CCInteger })\r\n  public speed: number = 300;\r\n\r\n  @property({ type: CCInteger })\r\n  public pipeSpeed: number = 200;\r\n\r\n  public isOver: boolean;\r\n\r\n  onLoad() {\r\n    this.initListener();\r\n    this.result.resetScore();\r\n    this.isOver = true;\r\n    director.pause();\r\n  }\r\n\r\n  initListener() {\r\n    // input.on(Input.EventType.KEY_DOWN, this.onKeyDown, this);\r\n\r\n    this.node.on(Node.EventType.TOUCH_START, () => {\r\n      if (this.isOver) {\r\n        this.resetGame();\r\n        this.character.resetBird();\r\n        this.startGame();\r\n      }\r\n\r\n      if (!this.isOver) {\r\n        this.character.fly();\r\n        this.characterAudio.onAudioQueue(0);\r\n      }\r\n    });\r\n  }\r\n\r\n  startGame() {\r\n    this.result.hideResults();\r\n    director.resume();\r\n  }\r\n\r\n  // onKeyDown(event: EventKeyboard) {\r\n  //   switch (event.keyCode) {\r\n  //     case KeyCode.KEY_A:\r\n  //       this.gameOver();\r\n  //       break;\r\n\r\n  //     case KeyCode.KEY_P:\r\n  //       this.result.addScore();\r\n  //       break;\r\n\r\n  //     case KeyCode.KEY_Q:\r\n  //       this.resetGame();\r\n  //       break;\r\n\r\n  //     default:\r\n  //       break;\r\n  //   }\r\n  // }\r\n\r\n  gameOver() {\r\n    this.result.showResults();\r\n    this.isOver = true;\r\n    this.characterAudio.onAudioQueue(3);\r\n    director.pause();\r\n  }\r\n\r\n  resetGame() {\r\n    this.result.resetScore();\r\n    this.pipePool.reset();\r\n    this.startGame();\r\n    this.isOver = false;\r\n    this.character.resetBird();\r\n  }\r\n\r\n  passPipe() {\r\n    this.result.addScore();\r\n    this.characterAudio.onAudioQueue(1);\r\n  }\r\n\r\n  createPipe() {\r\n    this.pipePool.addPool();\r\n  }\r\n\r\n  contactBottomPipe() {\r\n    const collider = this.character.getComponent(Collider2D);\r\n\r\n    if (collider) {\r\n      collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n    }\r\n  }\r\n\r\n  onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n    this.character.hitSomething = true;\r\n    this.characterAudio.onAudioQueue(2);\r\n  }\r\n\r\n  birdStruck() {\r\n    this.contactBottomPipe();\r\n    if (this.character.hitSomething) {\r\n      this.gameOver();\r\n    }\r\n  }\r\n\r\n  protected update(dt: number): void {\r\n    if (!this.isOver) {\r\n      this.birdStruck();\r\n    }\r\n  }\r\n}\r\n","import { _decorator, Canvas, Component, director, Node, UITransform, Vec3 } from 'cc';\r\nimport { GameController } from './GameController';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Ground')\r\nexport class Ground extends Component {\r\n  @property({ type: Node, tooltip: 'Ground 1 is here' })\r\n  public ground1: Node;\r\n\r\n  @property({ type: Node, tooltip: 'Ground 2 is here' })\r\n  public ground2: Node;\r\n\r\n  @property({ type: Node, tooltip: 'Ground 3 is here' })\r\n  public ground3: Node;\r\n\r\n  public groundWidth1: number;\r\n  public groundWidth2: number;\r\n  public groundWidth3: number;\r\n\r\n  public tempStartLocation1 = new Vec3();\r\n  public tempStartLocation2 = new Vec3();\r\n  public tempStartLocation3 = new Vec3();\r\n\r\n  public gameSpeed: number = new GameController().speed;\r\n\r\n  protected onLoad() {\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.groundWidth1 = this.ground1.getComponent(UITransform).width;\r\n    this.groundWidth2 = this.ground2.getComponent(UITransform).width;\r\n    this.groundWidth3 = this.ground3.getComponent(UITransform).width;\r\n\r\n    this.tempStartLocation1.x = 0;\r\n    this.tempStartLocation2.x = this.groundWidth1;\r\n    this.tempStartLocation3.x = this.groundWidth1 + this.groundWidth2;\r\n\r\n    this.ground1.setPosition(this.tempStartLocation1);\r\n    this.ground2.setPosition(this.tempStartLocation2);\r\n    this.ground3.setPosition(this.tempStartLocation3);\r\n  }\r\n\r\n  update(deltaTime: number) {\r\n    this.tempStartLocation1 = this.ground1.position;\r\n    this.tempStartLocation2 = this.ground2.position;\r\n    this.tempStartLocation3 = this.ground3.position;\r\n\r\n    this.tempStartLocation1.x -= this.gameSpeed * deltaTime;\r\n    this.tempStartLocation2.x -= this.gameSpeed * deltaTime;\r\n    this.tempStartLocation3.x -= this.gameSpeed * deltaTime;\r\n\r\n    const scene = director.getScene();\r\n    const canvas = scene.getComponentInChildren(Canvas);\r\n\r\n    if (this.tempStartLocation1.x <= 0 - this.groundWidth1) {\r\n      this.tempStartLocation1.x = canvas.getComponent(UITransform).width;\r\n    }\r\n\r\n    if (this.tempStartLocation2.x <= 0 - this.groundWidth2) {\r\n      this.tempStartLocation2.x = canvas.getComponent(UITransform).width;\r\n    }\r\n\r\n    if (this.tempStartLocation3.x <= 0 - this.groundWidth3) {\r\n      this.tempStartLocation3.x = canvas.getComponent(UITransform).width;\r\n    }\r\n\r\n    this.ground1.setPosition(this.tempStartLocation1);\r\n    this.ground2.setPosition(this.tempStartLocation2);\r\n    this.ground3.setPosition(this.tempStartLocation3);\r\n  }\r\n}\r\n","import { _decorator, Component, instantiate, Node, NodePool, Pool, Prefab } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PipePool')\r\nexport class PipePool extends Component {\r\n  @property({ type: Prefab })\r\n  public prefabPipes = null;\r\n\r\n  @property({ type: Node })\r\n  public pipePoolHome: Node;\r\n\r\n  public pool = new NodePool();\r\n  public createdPipe: Node;\r\n\r\n  initPool() {\r\n    const initCount = 3;\r\n    for (let i = 0; i < initCount; i++) {\r\n      this.createdPipe = instantiate(this.prefabPipes);\r\n\r\n      if (i === 0) {\r\n        this.pipePoolHome.addChild(this.createdPipe);\r\n      } else {\r\n        this.pool.put(this.createdPipe);\r\n      }\r\n    }\r\n  }\r\n\r\n  addPool() {\r\n    if (this.pool.size()) {\r\n      this.createdPipe = this.pool.get();\r\n    } else {\r\n      this.createdPipe = instantiate(this.prefabPipes);\r\n    }\r\n\r\n    this.pipePoolHome.addChild(this.createdPipe);\r\n  }\r\n\r\n  reset() {\r\n    this.pipePoolHome.removeAllChildren();\r\n    this.pool.clear();\r\n    this.initPool();\r\n  }\r\n}\r\n","import { _decorator, Component, find, log, Node, screen, UITransform, Vec3 } from 'cc';\r\nimport { GameController } from './GameController';\r\nconst { ccclass, property } = _decorator;\r\nconst random = (min: number, max: number) => Math.random() * (max - min) + min;\r\n\r\n@ccclass('Pipes')\r\nexport class Pipes extends Component {\r\n  @property({ type: Node, tooltip: 'Top Pipe' })\r\n  public topPipe: Node;\r\n\r\n  @property({ type: Node, tooltip: 'Bottom Pipe' })\r\n  public bottomPipe: Node;\r\n\r\n  public tempStartLocationUp: Vec3 = new Vec3(0, 0, 0);\r\n  public tempStartLocationDown: Vec3 = new Vec3(0, 0, 0);\r\n  public scene = screen.windowSize;\r\n\r\n  public game: GameController;\r\n  public pipeSpeed: number;\r\n  public tempSpeed: number;\r\n\r\n  isPass: boolean;\r\n\r\n  protected onLoad(): void {\r\n    this.game = find('GameController').getComponent('GameController') as GameController;\r\n    this.pipeSpeed = this.game.pipeSpeed;\r\n    this.initPos();\r\n    this.isPass = false;\r\n  }\r\n\r\n  initPos() {\r\n    this.tempStartLocationUp.x = this.topPipe.getComponent(UITransform).width + this.scene.width;\r\n    this.tempStartLocationDown.x = this.topPipe.getComponent(UITransform).width + this.scene.width;\r\n\r\n    const gap = random(450, 600);\r\n    const topHeight = random(250, 450);\r\n\r\n    this.tempStartLocationUp.y = topHeight;\r\n    this.tempStartLocationDown.y = topHeight - gap;\r\n\r\n    this.topPipe.setPosition(this.tempStartLocationUp);\r\n    this.bottomPipe.setPosition(this.tempStartLocationDown);\r\n\r\n    console.log('GAP', gap);\r\n    console.log('TOP', this.topPipe.position);\r\n    console.log('BOT', this.bottomPipe.position);\r\n  }\r\n\r\n  protected update(deltaTime: number): void {\r\n    this.tempSpeed = this.pipeSpeed * deltaTime;\r\n\r\n    this.tempStartLocationUp = this.topPipe.position;\r\n    this.tempStartLocationDown = this.bottomPipe.position;\r\n\r\n    this.tempStartLocationUp.x -= this.tempSpeed;\r\n    this.tempStartLocationDown.x -= this.tempSpeed;\r\n\r\n    this.topPipe.setPosition(this.tempStartLocationUp);\r\n    this.bottomPipe.setPosition(this.tempStartLocationDown);\r\n\r\n    if (this.isPass === false && this.topPipe.position.x <= 0) {\r\n      this.isPass = true;\r\n      this.game.passPipe();\r\n    }\r\n\r\n    if (this.topPipe.position.x < -this.scene.width) {\r\n      this.game.createPipe();\r\n      this.destroy();\r\n    }\r\n  }\r\n}\r\n","import { _decorator, Component, Label, Node } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Results')\r\nexport class Results extends Component {\r\n  @property({ type: Label })\r\n  public scoreLabel: Label;\r\n\r\n  @property({ type: Label })\r\n  public highScore: Label;\r\n\r\n  @property({ type: Label })\r\n  public resultEnd: Label;\r\n\r\n  public maxScore: number = 0;\r\n  currentScore: number;\r\n\r\n  updateScore(num: number) {\r\n    this.currentScore = num;\r\n    this.scoreLabel.string = '' + this.currentScore;\r\n  }\r\n\r\n  resetScore() {\r\n    this.updateScore(0);\r\n    this.hideResults();\r\n  }\r\n\r\n  addScore() {\r\n    this.updateScore(this.currentScore + 1);\r\n  }\r\n\r\n  showResults() {\r\n    this.maxScore = Math.max(this.maxScore, this.currentScore);\r\n    this.highScore.string = 'High Score: ' + this.maxScore;\r\n    this.resultEnd.node.active = true;\r\n    this.highScore.node.active = true;\r\n  }\r\n\r\n  hideResults() {\r\n    this.highScore.node.active = false;\r\n    this.resultEnd.node.active = false;\r\n  }\r\n}\r\n"]}